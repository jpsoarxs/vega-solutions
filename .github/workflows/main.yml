name: CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

  PORT: ${{ secrets.POSTGRES_PORT }}

  TYPEORM_POSTGRES_SYNCHRONIZE: ${{ secrets.TYPEORM_POSTGRES_SYNCHRONIZE }}
  TYPEORM_POSTGRES_LOGGING: ${{ secrets.TYPEORM_POSTGRES_LOGGING }}
  TYPEORM_POSTGRES_ENTITIES: ${{ secrets.TYPEORM_POSTGRES_ENTITIES }}
  TYPEORM_POSTGRES_MIGRATIONS: ${{ secrets.TYPEORM_POSTGRES_MIGRATIONS }}

  AUTH_SALT_ROUNDS: ${{ secrets.AUTH_SALT_ROUNDS }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  SIGN_EXPIRATION: ${{ secrets.SIGN_EXPIRATION }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Installing Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Set github secrets
        run: git config --global url."https://${{ secrets.PAT }}@github.com/".insteadOf ssh://git@github.com/

      - name: Install Dependencies
        run: npm install

      - name: Building APP
        run: npm run build

      - name: Running Jest Coverage
        run: npm run test:cov

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASS: ${{ secrets.POSTGRES_PASS }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_TYPEORM_POSTGRES_SYNCHRONIZE: ${{ secrets.TYPEORM_POSTGRES_SYNCHRONIZE }}
          envkey_TYPEORM_POSTGRES_LOGGING: ${{ secrets.TYPEORM_POSTGRES_LOGGING }}
          envkey_TYPEORM_POSTGRES_ENTITIES: ${{ secrets.TYPEORM_POSTGRES_ENTITIES }}
          envkey_TYPEORM_POSTGRES_MIGRATIONS: ${{ secrets.TYPEORM_POSTGRES_MIGRATIONS }}

      - name: Show files
        run: ls -a

      - name: Running Migrations
        run: npm run migration:run

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: prod-desafio.fly.dev

    steps:
      - name: Deploy application - step 1
        uses: actions/checkout@v2

      - name: Deploy application - step 2
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Up the deploy
        run: flyctl deploy --remote-only
